#!/bin/sh -eux

. gb-sh-functions

in_list() {
    expr " $1 " : ".* $2 " > /dev/null
}

id="$1"; shift
cd "$GB_TASKS_DIR/$id"

repo="$(cat task/repo)"
rc="$(cat task/rc)"
if [ "$rc" != 0 ]; then
    exit
fi

q_EVR="%|EPOCH?{%{EPOCH}:}|%{VERSION}-%{RELEASE}\n"

for builddir in $(find build -maxdepth 1 -mindepth 1 -type d -path 'build/[0-9]*'); do
    # Taking random (first) src.rpm
    srpm=$(echo "$builddir"/*/srpm/*.src.rpm | awk '{print $1}')
    source_pkg=$(rpmquery -p --qf "%{NAME}" "$srpm")
    version=$(rpmquery -p --qf "${q_EVR}" "$srpm")
    changelog=$(rpmquery -p --lastchange "$srpm")

    binary_pkgs=
    for rpm in $(find "$builddir" -type f -path "$builddir/*/rpms/*.rpm"); do
        binary_pkg=$(rpmquery -p --qf "%{NAME}" "$rpm")
        if ! in_list "$binary_pkgs" "$binary_pkg"; then
            binary_pkgs="$binary_pkgs $binary_pkg"
        fi
    done

    mkdir -p "build/bugmail"
    for bug_id in $(echo "$changelog" | gb-x-parse-bugs-from-changelog); do
        cat >"build/bugmail/$bug_id" <<__EOF
From: ${GB_BUGZILLA_FROM}
To: ${GB_BUGZILLA_TO}
X-Bugzilla-In-Bug-Id: ${bug_id}
X-Bugzilla-In-Source-Package: ${source_pkg}
X-Bugzilla-In-Binary-Packages:${binary_pkgs}

@bug_id=${bug_id}
@bug_status=RESOLVED
@resolution=FIXED

${source_pkg}-${version} -> ${repo}:

${changelog}
__EOF
        (echo "X-Bugzilla-In-Token: $GB_BUGZILLA_KEY"; cat "build/bugmail/$bug_id") | mutt -x
    done
done
