#!/bin/sh -efu

. shell-quote

arch="$1" i="$2"; shift 2

. gb-sh-remote-conf

dir=$(cat gears/$i/dir)
tag_name=$(cat gears/$i/tag_name)
tag_author=$(cat gears/$i/tag_author)

I="[$arch] ${dir##*/} $tag_name: build"
echo >&2 "$I start"

# check if rebuild is needed at all
if [ -s build/$i/$arch/chroot_base ]; then
	rm -f build/$i/$arch/REBUILD
	# rebuild is still needed if previous packages have been rebuilt
	for j in `seq 1 $(($i-1))`; do
		if [ -s build/$j/$arch/REBUILD ]; then
			rm -f build/$j/$arch/REBUILD
			echo 1 >build/$i/$arch/REBUILD
		fi
	done
fi

# copy source package and build data to remote side
rsync -q -- "gears/$i/pkg.tar" "$remote_host:tmp/"
mkdir -p "build/$i/$arch"
rsync -qrlt --delete -- "build/$i/$arch/" "$remote_host:build/"

ssh "$remote_host" ./gb-remote-build \
	"\"$(quote_shell "$arch")\"" \
	"\"$(quote_shell "${dir##*/}")\"" \
	"\"$(quote_shell "$tag_name")\"" \
	"\"$(quote_shell "$tag_author")\"" ||
		{ echo >&2 "$I FAILED";
		  rsync -q -- "$remote_host:build/log" "build/$i/$arch/" ||:;
		  exit 1; }

# copy build result from remote side
rsync -qrlt --delete -- "$remote_host:build/" "build/$i/$arch/"

echo >&2 "$I OK"
