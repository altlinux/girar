#!/bin/sh -efu

. gb-sh-functions

enable -f /usr/lib/bash/lockf lockf
# obtain an exclusive lock on the $GB_META_DIR
builtin lockf -v "$GB_META_DIR"

# prepare for update
pushd "$GB_META_DIR" >/dev/null
git symbolic-ref HEAD refs/heads/"$GB_REPO_NAME"
git read-tree HEAD
popd >/dev/null

# remove srpms (also removes rpms)
while read -r N EVR F; do
	pushd "$GB_META_DIR" >/dev/null
	git rm -q -r -f --cached -- "$N"
	rm -rf -- "$N"
	popd >/dev/null
done <plan/rm-src

# add/update srpms
while read -r N EVR F; do
	pushd "$GB_META_DIR" >/dev/null
	git rm -q -r -f --cached -- "$N" 2>/dev/null ||:
	rm -rf -- "$N"
	popd >/dev/null
	src=$N
	srpm=$(findsrc "$F")
	i=$(srpm2i "$F")
	copy_repo=
	if [ -s build/$i/copy_repo ]; then
		copy_repo=$(cat build/$i/copy_repo)
		err=
		pushd "$GB_META_DIR" >/dev/null
		git checkout -q -f "$copy_repo" -- "$N" &&
			EVR2=$(cat $src/srpm/EVR) && [ "$EVR" = "$EVR2" ] || err=1
		popd >/dev/null
		[ -n "$err" ] || continue
		echo >&2 "warning: cannot checkout $N $EVR from $copy_repo"
		pushd "$GB_META_DIR" >/dev/null
		git rm -q -r -f --cached -- "$N" 2>/dev/null ||:
		rm -rf -- "$N"
		popd >/dev/null
	fi
	mkdir -p $GB_META_DIR/$src/srpm
	echo "$EVR" >$GB_META_DIR/$src/srpm/EVR
	gb-x-rpm-changelog $srpm >$GB_META_DIR/$src/srpm/changelog
	for arch in i586 x86_64; do
		mkdir -p $GB_META_DIR/$src/srpm/$arch
		if [ -s build/$i/$arch/excluded ]; then
			echo 1 >$GB_META_DIR/$src/srpm/$arch/excluded
			continue
		fi
		srpm=build/$i/$arch/srpm/$F
		rpmquery -R -p $srpm >$GB_META_DIR/$src/srpm/$arch/BR
		sed -i '/^rpmlib(/d' $GB_META_DIR/$src/srpm/$arch/BR
		sed -i 's/ *$//' $GB_META_DIR/$src/srpm/$arch/BR
		sort -u -o $GB_META_DIR/$src/srpm/$arch/BR{,}
		[ -z "$copy_repo" ] || continue
		cat build/$i/$arch/log >$GB_META_DIR/$src/srpm/$arch/buildlog
		gb-x-fixup-buildlog $GB_META_DIR/$src/srpm/$arch/buildlog
	done
done <plan/add-src

# add/update rpms
while read -r src _ _ N EVR A F; do
	mkdir -p $GB_META_DIR/$src/rpms/$A/$N
	bin=$(findbin "$F")
	rpmquery --qf '%|EPOCH?{%{EPOCH}:}|%{VERSION}-%{RELEASE}\n' -p $bin >$GB_META_DIR/$src/rpms/$A/$N/EVR
	rpmquery --list -p $bin >$GB_META_DIR/$src/rpms/$A/$N/F
	for q in requires provides obsoletes conflicts; do
		Q=$(echo $q |sed 's/\(.\).*/\U\1/')
		rpmquery --$q -p $bin >$GB_META_DIR/$src/rpms/$A/$N/$Q
		sed -i 's/ *$//' $GB_META_DIR/$src/rpms/$A/$N/$Q
		sort -u -o $GB_META_DIR/$src/rpms/$A/$N/$Q{,}
	done
done <plan/add-src+bin

# commit
while read -r N EVR F; do
	pushd "$GB_META_DIR" >/dev/null
	git add "$N"
	rm -rf -- "$N"
	popd >/dev/null
done <plan/add-src

msg="A$(cat task/id)"
author=$(cat task/owner)

pushd "$GB_META_DIR" >/dev/null
git commit -q -m "$msg" --author "$author"
git repack -q -a -d
popd >/dev/null
