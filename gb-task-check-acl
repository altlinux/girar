#!/bin/sh -efu

. gb-sh-functions

rc=0

check_acl()
{
	local i="$1" src="$2"; shift 2
	local u out st= a

	list_notifiable_pkg_acl_members "$src" >> task/acl-addressees

	# check author permissions
	u="$(cat gears/$i/userid)"
	GIRAR_USER="$u" gb-girar check-perms "$src" "$GB_REPO_NAME" || st=$?
	[ -n "$st" ] || return 0

	# check confirmer permissions
	for a in $(cd acl/$i 2>/dev/null && shopt -s nullglob && set +f && echo [a-z]*); do
		st=
		GIRAR_USER="$a" gb-girar check-perms "$src" "$GB_REPO_NAME" || st=$?
		[ -n "$st" ] || return 0
	done

	# author is not permitted and nobody approved
	rc=1
}

. gb-sh-tmpdir

# Deal with added packages.
# input: src-N  src-EVR  src-F
cut -f1,3 plan/add-src >$tmpdir/src2srpm
sort -u -o $tmpdir/src2srpm{,}

while read -r N F; do
	i=$(srpm2i "$F")
	check_acl "$i" "$N"
done <$tmpdir/src2srpm

# Deal with removed/replaced packages.
# input: src1-N  src2-F
while read -r N F; do
	i=$(srpm2i "$F")
	echo >&2 "$N is replaced with $F"
	check_acl "$i" "$N"
done <plan/oldsrc2newsrpm

# Deal with explicitly copied and removed packages.
for i in $(package_nums); do
	check_acl "$i" "$(cat "gears/$i/package")"
done

sort -u -o task/acl-addressees{,}

[ "$rc" = 0 ] && text=OK || text=FAILED
stamp_echo >&2 "acl check $text"
exit $rc
