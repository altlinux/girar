#!/bin/sh -efu

. gb-sh-functions

# Use a fixed path so that genpkglist md5cache works.
rm -rf "$GB_TMP_REPO_DIR"
mkdir "$GB_TMP_REPO_DIR"

# Prepare skeleton.
for arch in $GB_ARCH noarch; do
	mkdir $GB_TMP_REPO_DIR/$arch
	# Copy base directory, except for contents_index.
	rsync -a --exclude contents_index \
		$GB_REPO_DIR/$arch/base $GB_TMP_REPO_DIR/$arch/
	# Deal with RPMS and SRPMS.
	if cut -f3 plan/{add,rm}-bin |fgrep -qs "$arch"; then
		# Need to copy directory structure (using symlinks).
		cp -prs $GB_REPO_DIR/$arch/{RPMS,SRPMS}.classic \
			$GB_TMP_REPO_DIR/$arch/
	else
		# Arch packages unchanged, no need to copy directory structure.
		ln -s $GB_REPO_DIR/$arch/{RPMS,SRPMS}.classic \
			$GB_TMP_REPO_DIR/$arch/
	fi
done

# Commit packages.  This is a light-weight reimplementation
# of gb-y-task-commit-packages.  For tmprepo, we omit files/
# and update only RPMS.classic components.
while read -r N EVR A F; do
	rm -- $GB_TMP_REPO_DIR/$A/RPMS.classic/$F
done <plan/rm-bin
while read -r N EVR A F; do
       bin=$(findbin "$F")
       # NB: copy here, so that the repo is rsyncable to remotes.
       cp -p -- $PWD/$bin $GB_TMP_REPO_DIR/$A/RPMS.classic/$F
done <plan/add-bin

# SRPMS.classic is also updated here, since we want to reuse
# test repo base directories later in gb-task-commit-repo.
# However, we omit SRPMS.all update.
while read -r F A; do
	rm -- $GB_TMP_REPO_DIR/$A/SRPMS.classic/$F
done <plan/rm-srpm2arch
while read -r F A; do
	src=$(findsrc "$F")
	# NB: copying is not needed here.
	ln -s -- $PWD/$src $GB_TMP_REPO_DIR/$A/SRPMS.classic/$F
done <plan/add-srpm2arch

# Regen repo.
gb-y-repo-regen-basedir "$GB_TMP_REPO_DIR"

# basedir ok, SRPMS no longer needed
for arch in $GB_ARCH noarch; do
	rm -r $GB_TMP_REPO_DIR/$arch/SRPMS.classic
done

# Optimize even more: the whole arch component can be turned into symlink.
for arch in $GB_ARCH noarch; do
	if cut -f3 plan/{add,rm}-bin |fgrep -qs "$arch"; then
		# Arch packages changed, cannot optimize.
		continue
	fi
	if cmp -s {$GB_REPO_DIR,$GB_TMP_REPO_DIR}/$arch/base/pkglist.classic.xz; then
		rm -r $GB_TMP_REPO_DIR/$arch
		ln -s $GB_REPO_DIR/$arch $GB_TMP_REPO_DIR/
	fi
done

stamp_echo >&2 'created test repo'
