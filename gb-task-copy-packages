#!/bin/sh -efu

. gb-sh-functions

handle_build_arch()
{
	local srpm="$1"; shift
	local arch="$1"; shift
	local exclude_arch exclusive_arch

	exclude_arch="$(rpmquery --qf '[%{excludearch}\n]' -p "$srpm")"
	if [ -n "$exclude_arch" ] && printf '%s\n' "$exclude_arch" |fgrep -qx "$arch"; then
		printf "%s: Architecture is excluded: %s\n" "${srpm##*/}" "$arch" >excluded
		return
	fi

	exclusive_arch="$(rpmquery --qf '[%{exclusivearch}\n]' -p "$srpm")"
	if [ -n "$exclusive_arch" ] && ! printf '%s\n' "$exclusive_arch" |fgrep -qx "$arch"; then
		printf "%s: Architecture is not included: %s\n" "${srpm##*/}" "$arch" >excluded
		return
	fi
}

. gb-sh-tmpdir

for i in $(copy_nums); do
	repo="$(cat gears/$i/copy_repo)"
	repo_dir="$(. gb-sh-conf-$repo && printf %s "$GB_REPO_DIR")"
	cd "$tmpdir"
	make_repo_table "$repo"
	cd - >/dev/null

	# output: src-F  bin-A  bin-F
	join -t$'\t' -o '1.3 1.6 1.7' -- "$tmpdir/$repo" "gears/$i/package" >"$tmpdir/copy"
	sort -u -o "$tmpdir/copy"{,}
	if [ ! -s "$tmpdir/copy" ]; then
		stamp_echo >&2 "package \`$(cat "gears/$i/package")' not found in \`$repo', copy FAILED"
		exit 1
	fi
	cut -f1 "$tmpdir/copy" |sort -u >"$tmpdir/copy.src"

	# remove previously copied packages if any
	rm -rf "build/$i"

	while read -r S; do
		for arch in i586 x86_64; do
			(umask 002; mkdir -p "build/$i/$arch") || false
			cd "build/$i/$arch"
			rm -f excluded
			handle_build_arch "$repo_dir/files/SRPMS/$S" "$arch"
			cd - >/dev/null
		done
	done <"$tmpdir/copy.src"

	while read -r S A B; do
		a="$A"
		if [ "$A" = 'noarch' ]; then
			a='i586 x86_64'
		fi
		for arch in $a; do
			cd "build/$i/$arch"
			s="$(readlink -ev "$repo_dir/$A/SRPMS.classic/$S")"
			if [ ! -s excluded ]; then
				b="$(readlink -ev "$repo_dir/$A/RPMS.classic/$B")"
				(umask 002; mkdir -p srpm rpms) || false
				cp -v -l "$s" srpm/ >>log 2>&1
				cp -v -l "$b" rpms/ >>log 2>&1
			fi
			cd - >/dev/null
		done
	done <"$tmpdir/copy"
	for a in i586 x86_64; do
		gb-task-copy-remote-arch-i $a $i
	done
	stamp_echo >&2 "copy from \`$repo': $(join -t$'\t' -o 1.3 -- "$tmpdir/$repo" "gears/$i/package" |sort -u)"
done

#stamp_echo >&2 'copy OK'
