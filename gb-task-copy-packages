#!/bin/sh -efu

. gb-sh-functions
. gb-sh-conf

query_packages()
{
	local repo="$1"; shift
	local repo_dir="$1"; shift

	if [ -f "$tmpdir/$repo.src" -a -f "$tmpdir/$repo.bin" ]; then
		return 0
	fi

	if [ -s "$repo_dir/files/list/src.list" ]; then
		cat "$repo_dir/files/list/src.list" >"$tmpdir/$repo.src"
	else
		qsrc $repo_dir/{i586,x86_64,noarch}/SRPMS.classic/ >$tmpdir/$repo.src
	fi
	sort -u -o "$tmpdir/$repo.src"{,}

	if [ -s "$repo_dir/files/list/bin.list" ]; then
		cat "$repo_dir/files/list/bin.list" >"$tmpdir/$repo.bin"
	else
		qbin $repo_dir/{i586,x86_64,noarch}/RPMS.classic/ >$tmpdir/$repo.bin
	fi
	sort -u -o "$tmpdir/$repo.bin"{,}

	mktable "$tmpdir/$repo"
}

. gb-sh-tmpdir

for i in $(copy_nums); do
	repo="$(cat gears/$i/copy_repo)"
	repo_dir="$(. gb-sh-conf-$repo && printf %s "$GB_REPO_DIR")"
	query_packages "$repo" "$repo_dir"
	join -t$'\t' -o "1.3 1.6 1.7" -- "$tmpdir/$repo" "gears/$i/package" >"$tmpdir/copy"
	sort -u -o "$tmpdir/copy"{,}
	if [ ! -s "$tmpdir/copy" ]; then
		stamp_echo >&2 "FAILED to copy a non-existent package \"$(cat "gears/$i/package")\" from \"$repo\""
		exit 1
	fi
	while read -r S A B; do
		a="$A"
		if [ "$A" = 'noarch' ]; then
			a='i586 x86_64'
		fi
		for arch in $a; do
			(umask 002; mkdir -p "build/$i/$arch/"{srpm,rpms}) || false
			install -v -pm644 "$repo_dir/$A/SRPMS.classic/$S" "build/$i/$arch/srpm/" >>"build/$i/$arch/log"
			install -v -pm644 "$repo_dir/$A/RPMS.classic/$B" "build/$i/$arch/rpms/" >>"build/$i/$arch/log"
		done
	done <"$tmpdir/copy"
	stamp_echo >&2 "copy from \"$repo\": $(cat "gears/$i/package")"
done

stamp_echo >&2 'copy OK'
