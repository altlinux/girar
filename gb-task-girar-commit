#!/bin/sh -efu

. gb-sh-functions
. gb-sh-conf

set_GIT_DIR()
{
	local sym="$(printf %s "$N" |cut -c1)"
	GIT_DIR="$GB_REAL_GEARS/$sym/$N.git"
	export GIT_DIR
}

girar_commit()
{
	local N="$1" i="$2"; shift 2
	local GIT_DIR tag_name
	set_GIT_DIR
	tag_name="$(cat "gears/$i/tag_name")"
	if git rev-parse --verify "$GB_GEAR_BRANCH" >/dev/null 2>&1; then
		# real gear
		git fetch -q -n gears/$i/git tag "$tag_name"
		git branch -f "$GB_GEAR_BRANCH" "tags/$tag_name"
	else
		# first time push
		git init -q --template=/var/empty
		git fetch -q -n gears/$i/git tag "$tag_name"
		git branch "$GB_GEAR_BRANCH" "tags/$tag_name"
		touch -- "$GIT_DIR/git-daemon-export-ok"
	fi
}

girar_obsolete()
{
	local N="$1"; shift
	local GIT_DIR
	set_GIT_DIR
	[ -d "$GIT_DIR" ] || return 0
	if git rev-parse --verify "$GB_GEAR_BRANCH" >/dev/null 2>&1; then
		git branch -f "old/$GB_GEAR_BRANCH" "$GB_GEAR_BRANCH"
		git branch -D "$GB_GEAR_BRANCH"
	fi
}

while read -r N EVR F; do
	i=$(srpm2i "$F")
	girar_commit "$N" "$i"
done <plan/add-src

# handle obsoleted packages
while read -r N F; do
	girar_obsolete "$N"
done <plan/oldsrc2newsrpm

stamp_echo >&2 'gears update OK'
