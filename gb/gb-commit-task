#!/bin/sh -efu

. gb-sh-functions

id="$1"; shift

cd "$GB_TASKS_DIR/$id"
# obtain an exclusive lock on the TASKS structure
exec <.
flock 0

if [ "$(cat task/state)" != COMMITTING ]; then
	echo >&2 "Task #$id is not selected for commit"
	exit 1
fi

if [ -f task/test-only ]; then
	echo >&2 "Task #$id is a test only task"
	exit 1
fi

if [ -f task/swift ]; then
	echo >&2 "Task #$id is a swift task"
	exit 1
fi

try=$(cat task/try)
iter=$(cat task/iter)
log="logs/events.$try.$iter.log"

gb-task-validate-state pending || exit 0

run_by=
[ -s "$log" ] || {
	run_by="$(cat task/run ||:)"
	stamp_echo "task #$id for $GB_REPO_NAME resumed by $run_by:"
	if [ -s task/message ]; then
		stamp_echo "message: $(tr -cd '[:print:]' < task/message)"
	fi
} >> "$log"

gb-x-girar check-task-perms "$id" > logs/perms.log 2>&1 || {
	state=EPERM
	cat logs/perms.log >> "$log"
	stamp_echo >> "$log" "task #$id for $GB_REPO_NAME $state"
	gb-x-girar task-change-state "$id" "$state"
	gb-task-send-email "$id"
	exit 0
}

[ -z "$run_by" ] ||
	cat logs/perms.log >> "$log"

$0-stages >>"$log" 2>&1 && rc=0 || rc=$?

if [ "$(cat task/state)" != COMMITTING ]; then
	exit $rc
fi

if [ "$rc" = 0 ]; then
	state=DONE
else
	state=FAILURE
	halt_build_queue ||:
fi

stamp_echo >>"$log" "task #$id for $GB_REPO_NAME $state"
gb-x-girar task-change-state "$id" "$state"

gb-task-send-email "$id"

if [ "$rc" = 0 ]; then
	gb-task-close-bugs &
	gb-task-report-vulns &
	gb-y-notify-archiver &
	gb-y-reap-archived-repo &
	gb-y-awake-tasks "$id" &
fi

exit $rc
