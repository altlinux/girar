#!/bin/sh -efu

. gb-sh-functions

fail_if_task_abort_requested

# Check that the plan is consistent with respect to package versioning:
# when replacing packages, versions must increase.

. gb-sh-tmpdir

{
	# input: src-N  src-EVR  src-F
	# join by src-N
	# output: N  EVR1  F1  EVR2  F2

	join -t$'\t' -o 1.1,1.2,1.3,2.2,2.3 plan/rm-src plan/add-src

	# input: bin-N  bin-EVR  bin-A  bin-F
	# join by bin-N
	# output: N  EVR1  F1  EVR2  F2  A1  A2

	join -t$'\t' -o 1.1,1.2,1.4,2.2,2.4,1.3,2.3 plan/rm-bin plan/add-bin
} > $tmpdir/replace
sort -u -o $tmpdir/replace

if [ -n "$GB_ALLOW_SAME_NEVR" ]; then
	RELATION=-le
	PART_OF_ERROR_MESSAGE=
else
	RELATION=-lt
	PART_OF_ERROR_MESSAGE='either the same or '
fi

rc=0

while read -r N EVR1 F1 EVR2 F2 A1 A2; do {
	[ -z "$A1$A2" ] && what=source || what=binary

	if [ -z "$GB_ALLOW_SAME_NEVR" ] && [ "$F1" = "$F2" ]; then
		echo " *** new and existing $what packages have the same filename"
		printf '%s\t%s\n' "$N" "$F1"
		rc=1
		continue
	fi

	[ "$A1" = "$A2" ] ||
	[ "$A1" = noarch ] ||
	[ "$A2" = noarch ] ||
		continue

	[ "$(rpmevrcmp "$EVR1" "$EVR2")" "$RELATION" 0 ] || {
		echo " *** $what package version is ${PART_OF_ERROR_MESSAGE}older than existing"
		printf '%s\t%s\t%s\n' "$N" "$EVR1" "$EVR2"
		rc=1
	}
} < /dev/null
done < $tmpdir/replace >&2

[ "$rc" = 0 ] && text=OK || text=FAILED
stamp_echo >&2 "version check $text"
exit $rc
