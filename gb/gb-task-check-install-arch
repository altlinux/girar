#!/bin/sh -efu

arch="$1"; shift

. gb-sh-functions

. shell-quote

list_comps()
{
	local dir="$1"; shift

	find -L "$dir" -mindepth 1 -maxdepth 1 -name 'RPMS.?*' \
	     -type d -prune -not -empty -printf '%f\n' |
		sed 's/^RPMS\.//' | tr -s '[:space:]' ' '
}

comps="$(list_comps "$GB_TMP_REPO_DIR/$arch")"
noarch_comps="$(list_comps "$GB_TMP_REPO_DIR"/noarch)"

if [ -z "$comps" ] || [ -z "$noarch_comps" ]; then
	stamp_echo >&2 "[$arch] empty components lists: comps=[$comps] noarch_comps=[$noarch_comps]"
	exit 1
fi

# Prepare remote node for $arch install check.
# Note that now we use $remote_host:gb-repo, not $GB_REPO_DIR.
gb-x-rsync-loop -a "$GB_HOME/remote/" "$remote_host:"
gb-x-ssh "$remote_host" ./gb-remote-plant \
	install \
	"\"$(quote_shell "$(cat task/owner)")\"" \
	"\"$(quote_shell "$GB_REPO_NAME")\"" \
	"\"$(quote_shell "$GB_REPO_REAL_NAME")\"" \
	gb-repo \
	"\"$(quote_shell "$arch")\"" \
	"\"$(quote_shell "$comps")\"" \
	"\"$(quote_shell "$noarch_comps")\"" \
	'unchecked_initroot_cache=\$\{GB_UNCHECKED_INITROOT_CACHE-\}' \
	#

# Copy the temporary repo generated by gb-task-gen-next-repo.
gb-x-rsync-loop -a --exclude '*list.*.bz2' \
	"$GB_TMP_REPO_DIR"/{$arch,noarch} "$remote_host:gb-repo/"

rc=0
q_bin='%{name}\t%|serial?{%{serial}:}|%{version}-%{release}\t%{arch}\t%{sourcerpm}\t%{sha1header}\n'

. gb-sh-tmpdir

while read -r N EVR A F P I C dummy; do
	[ "$A" = "$arch" -o "$A" = 'noarch' ] || continue

	if [ -f task/swift -o -s task/trusted_swift ]; then
		if [ -f "install/$N/$arch/chroot_install" ]; then
			rpmquery --qf "$q_bin" -p "$P" > "$tmpdir/id"
			if cmp -s install/"$N/$arch"/id "$tmpdir"/id; then
				stamp_echo >&2 "[$arch] #$I $N: install check swiftly skipped"
				continue
			fi
		fi
	fi

	if maybe_cancel; then
		stamp_echo >&2 "[$arch] #$I $N: install check CANCELLED"
		rc=1
		break
	fi

	# copy install chroot identification to remote side
	(umask 002; mkdir -p "install/$N/$arch") || false
	gb-x-rsync-loop -qrlt --delete -- "install/$N/$arch/" "$remote_host:install/"

	gb-x-ssh "$remote_host" ./gb-remote-check-install \
			"$GB_REPO_NAME" \
			"$GB_REPO_REAL_NAME" \
			"$arch" "$N" "$EVR" "$A" "$C" "$F" "$I" </dev/null || {
		stamp_echo >&2 "[$arch] #$I $N: install check FAILED"
		task_change_state_to_failing "[$arch]"
		rc=1
	}
	# copy install chroot identification and/or check logs from remote side
	gb-x-rsync-loop -qrlt --delete -- "$remote_host:install/" "install/$N/$arch/"
done <plan/add-bin

# Purge temporary repo.
gb-x-rsync-loop -a --delete /var/empty/ "$remote_host:gb-repo/"

exit $rc
