#!/bin/sh -efu

arch="$1"; shift

. gb-sh-functions

. shell-quote

comps="$(set +f && cd "$GB_TMP_REPO_DIR/$arch" && ls -d RPMS.?* |
	sed 's/^RPMS\.//' | tr -s '[:space:]' ' ')"
[ -n "$comps" ]

noarch_comps="$(set +f && cd "$GB_TMP_REPO_DIR/noarch" && ls -d RPMS.?* |
	sed 's/^RPMS\.//' | tr -s '[:space:]' ' ')"
[ -n "$noarch_comps" ]

# Prepare remote node for $arch install check.
# Note that now we use $remote_host:gb-repo, not $GB_REPO_DIR.
gb-x-rsync-loop -a "$GB_HOME/remote/" "$remote_host:"
gb-x-ssh "$remote_host" ./gb-remote-plant \
	install \
	"\"$(quote_shell "$(cat task/owner)")\"" \
	"\"$(quote_shell "$GB_REPO_NAME")\"" \
	gb-repo \
	"\"$(quote_shell "$arch")\"" \
	"\"$(quote_shell "$comps")\"" \
	"\"$(quote_shell "$noarch_comps")\"" \
	"\"$(quote_shell "$GB_APT_CACHE_LIMIT")\"" \
	'unchecked_initroot_cache=\$\{GB_UNCHECKED_INITROOT_CACHE-\}' \
	#

# Copy the temporary repo generated by gb-task-gen-next-repo.
gb-x-rsync-loop -a --exclude '*list.*.bz2' \
	"$GB_TMP_REPO_DIR"/{$arch,noarch} "$remote_host:gb-repo/"

rc=0
q_bin='%{name}\t%|serial?{%{serial}:}|%{version}-%{release}\t%{arch}\t%{sourcerpm}\t%{sha1header}\n'

. gb-sh-tmpdir

while read -r N EVR A F P I; do
	[ "$A" = "$arch" -o "$A" = 'noarch' ] || continue

	if [ -f task/swift -o -s task/trusted_swift ]; then
		if [ -f "install/$N/$arch/chroot_install" ]; then
			rpmquery --qf "$q_bin" -p "$P" > "$tmpdir/id"
			if cmp -s install/"$N/$arch"/id "$tmpdir"/id; then
				stamp_echo >&2 "[$arch] #$I $N: install check swiftly skipped"
				continue
			fi
		fi
	fi

	if maybe_cancel; then
		stamp_echo >&2 "[$arch] #$I $N: install check CANCELLED"
		rc=1
		break
	fi

	# copy install chroot identification to remote side
	(umask 002; mkdir -p "install/$N/$arch") || false
	gb-x-rsync-loop -qrlt --delete -- "install/$N/$arch/" "$remote_host:install/"

	comp=classic
	for c in checkinstall debuginfo gostcrypto; do
		if [ -z "${N##*-$c}" ]; then
			if [ -d $GB_TMP_REPO_DIR/$arch/RPMS.$c ]; then
				comp=$c
			fi
			break
		fi
	done

	if gb-x-ssh "$remote_host" ./gb-remote-check-install \
	       "$GB_REPO_NAME" "$arch" "$N" "$EVR" "$A" "$comp" "$F" "$I" </dev/null; then
		# copy install chroot identification from remote side
		gb-x-rsync-loop -qrlt --delete -- "$remote_host:install/" "install/$N/$arch/"
	else
		rm -rf "install/$N/$arch"
		stamp_echo >&2 "[$arch] #$I $N: install check FAILED"
		task_change_state_to_failing "[$arch]"
		rc=1
	fi
done <plan/add-bin

# Purge temporary repo.
gb-x-rsync-loop -a --delete /var/empty/ "$remote_host:gb-repo/"

exit $rc
