#!/bin/sh -efu

. gb-sh-functions

for i in $(gear_nums); do
	rm -f gears/$i/pkg.tar
done

for arch in $GB_ARCH noarch; do
	rm -rf -- build/repo/$arch/base.{prev,next}
	rm -f -- bad_elf_symbols/$arch.hash
done

if [ -d bad_elf_symbols ]; then
	find bad_elf_symbols/ -mindepth 1 -empty -delete ||:
fi

for arch in ${GB_AREPO_ARCH-}; do
	rm -rf -- arepo/$arch/base
	rm -f -- arepo/$arch/pkg.list
	rm -f -- plan/arepo-{pkg,table}-$arch plan/arepo-table-$arch.xz
done

for arch in src noarch $GB_ARCH ${GB_AREPO_ARCH-}; do
	rm -f -- plan/$arch.hash.xz
done

rm -f -- plan/next.{src,bin}{,.xz}

while read -r N EVR F P I; do
	[ -L "$P" ] || continue
	t="gears/$I/$F"
	if [ -f "$t" -a ! -L "$t" ]; then
		cp -afl -- "$P" "$t" ||:
	fi
	for arch in $GB_ARCH; do
		t="build/$I/$arch/srpm/$F"
		[ "$P" != "$t" ] && [ -f "$t" -a ! -L "$t" ] || continue
		cp -afl -- "$P" "$t" ||:
	done
done < plan/add-src

while read -r N EVR A F P I; do
	[ -L "$P" ] || continue
	for arch in $GB_ARCH; do
		t="build/$I/$arch/rpms/$F"
		[ "$P" != "$t" ] && [ -f "$t" -a ! -L "$t" ] || continue
		cp -afl -- "$P" "$t" ||:
	done
done < plan/add-bin
