#!/bin/sh -efu

. gb-sh-functions

. shell-quote
quote_sed_regexp_variable qgroups "$GB_EMAIL_DOMAIN_GROUPS"

id="$1"; shift
cd "$GB_TASKS_DIR/$id"

if [ -f task/skip ]; then
	exit 0
fi

hostname="${HOSTNAME-$(hostname)}"
me="$(whoami)"
state="$(cat task/state)"
try="$(cat task/try)"
iter="$(cat task/iter)"
repo="$(cat task/repo)"
owner="$(cat task/owner)"
run_by="$(cat task/run ||:)"

if [ "$state" = DONE ]; then
	k="_$((id/1024))"
	url="$GB_SITE$GB_TASKS_DONE_DIR/$k/$id/"
else
	url="$GB_SITE$GB_TASKS_DIR/$id/"
fi
if [ -f task/test-only ] &&
   [ "$state" != TESTED ] &&
   [ "$state" != SWEPT ]; then
	test_only=' [test-only]'
else
	test_only=
fi

summary="$(cat report/summary ||:)"
[ -n "$summary" ] || summary=' empty'
stripped_summary="$(printf %s "$summary" |fmt |head -n1)"
[ "$stripped_summary" = "$summary" ] ||
	stripped_summary="$stripped_summary ..."

if [ $try -gt 1 ]; then
	stry=" (try $try)"
else
	stry=
fi

if [ "$repo" != "${GB_DEFAULT_REPO:-sisyphus}" ]; then
	srepo=" $repo"
else
	srepo=
fi

log_file="logs/events.$try.$iter.log"
log_size="$(du -bk "$log_file" |cut -f1)"

logger -t 'girar-builder' "user=$owner task=$id repo=$repo try=$try iter=$iter status=$state"

cc="$({
	(set +f; cat gears/*/userid)
	[ -s report/acl-addressees ] ||
		gb-y-gen-acl-addressees
	[ -n "$test_only" ] ||
		cat report/unmet-addressees report/acl-addressees
      } | grep ^. | sort -u | join -v1 - task/owner)"

message_id="<girar.task.$id.$try.$iter@$hostname>"
references="$(set +f && ls logs/events.*.*.log 2>/dev/null |
		cut -d. -f2-3 |
		sort -t. -rn |
		sort -us -t. -rnk1,1 |
		grep -Fvx "$try.$iter" |
		sed "s/.*/<girar.task.$id.&@$hostname>/")"
in_reply_to="$(printf %s "$references" |tail -1)"
if [ -n "${GB_EMAIL_REPLY_TO-}" ]; then
	reply_to="${GB_EMAIL_REPLY_TO-}"
else
	reply_to="$owner@$GB_EMAIL_DOMAIN_PEOPLE"
fi

. gb-sh-tmpdir

cat >"$tmpdir/draft" <<__EOF
From: (Girar $me ($run_by)) $me
To: $GB_USER_PREFIX$owner
Cc: $(printf %s "$cc" | sort | sed "s/^[^@]/$GB_USER_PREFIX&/" |
	sed 's/^@\(.\+\)$/\1@'"$qgroups"/ |
	tr -s '\n' , | sed 's/,/, /g')$GB_REPO_EMAIL
Message-ID: $message_id
Reply-To: $reply_to
Mail-Followup-To: $me
X-girar-task-id: $id
X-girar-task-owner: $owner
X-girar-task-cc: $(printf %s "$cc" |tr -s '\n' , |sed 's/,/, /g')
X-girar-task-repo: $repo
X-girar-task-try: $try
X-girar-task-iter: $iter
X-girar-task-status: $state
X-girar-task-URL: $url
X-girar-task-log: $log_file
X-girar-task-summary: [#$id]${test_only}$srepo $state$stry$summary
Subject: [#$id]${test_only}$srepo $state$stry$stripped_summary
In-Reply-To: $in_reply_to
References: $(printf %s "$references" |tr -s '\n' ' ')

$url$log_file

__EOF

if seq -f "logs/events.$try.%g.log" 1 $iter |
	xargs -r cat -- |
	girar-summary > "$tmpdir/log_summary" &&
   [ -s "$tmpdir/log_summary" ]; then
	cat "$tmpdir/log_summary"
	echo
fi >> "$tmpdir/draft"

if [ "$log_size" -le 256 ]; then
	cat -- "$log_file" >>"$tmpdir/draft"
fi

mutt -x -H "$tmpdir/draft" </dev/null
