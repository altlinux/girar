#!/bin/sh -efu

. gb-sh-functions

fail_if_task_abort_requested

id="$(cat task/id)"

rc=0
I=
fail()
{
	stamp_echo >&2 "#$I: $*"
	rc=1
}

. gb-sh-tmpdir
for r in $GB_REPO_UP_NAME; do
	cd "$tmpdir"
	make_repo_table $r
	sort -k1,1 -o $r.src{,}
	sort -k1,1 -o $r.bin{,}
	cd - >/dev/null
done

check_nevr()
{
	local t="$1"; shift
	local n="$1"; shift
	local evr="$1"; shift
	local a="$1"; shift
	local r evr0 a0

	for r in $GB_REPO_UP_NAME; do
		printf '%s\t%s\n' "$n" "$evr" |
			join -t$'\t' -o '2.2,2.3' - "$tmpdir/$r.$t" |
			sort -u > "$tmpdir/evra"
		while read -r evr0 a0; do
			[ -z "$a" ] || [ "$a" = "$a0" ] ||
			[ "$a" = 'noarch' ] || [ "$a0" = 'noarch' ] ||
				continue
			if [ -z "$GB_ALLOW_SAME_NEVR" ]; then
				is_ver1_lt_ver2 "$evr" "$evr0" || {
					fail "${a:-$t} package \`$n' version \`$evr' is not less than its version \`$evr0' in \`$r'"
					return 1
				}
			else
				is_ver1_le_ver2 "$evr" "$evr0" || {
					fail "${a:-$t} package \`$n' version \`$evr' is greater than its version \`$evr0' in \`$r'"
					return 1
				}
			fi
		done < "$tmpdir/evra"
	done
}

gb-x-girar hook-event task progress "$id" "${0##*/gb-}" "started" ||:

bad_I=
while read -r N EVR F P I; do
	check_nevr src "$N" "$EVR" '' < /dev/null ||
		bad_I="$bad_I $I"
done < plan/add-src

while read -r N EVR A F P I C dummy; do
	for i in $bad_I; do
		[ "$i" = "$I" ] || continue
		continue 2
	done
	check_nevr bin "$N" "$EVR" "$A" < /dev/null ||
		bad_I="$bad_I $I"
done < plan/add-bin

[ "$rc" = 0 ] || {
	stamp_echo >&2 'neighbour version check FAILED'
	gb-x-girar hook-event task progress "$id" "${0##*/gb-}" "failed" ||:
	exit $rc
}

gb-x-girar hook-event task progress "$id" "${0##*/gb-}" "processed" ||:
