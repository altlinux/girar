#!/bin/sh -efu
#
# sync $GB_REPO tasks

enable -f /usr/lib/bash/lockf lockf

. girar-sh-functions
. gb-sh-setup

builtin lockf -nv "$GB_TASKS"
builtin lockf -v "$GIRAR_TASKS"

atexit()
{
	local rc=$?
	trap - EXIT
	rm -rf "$workdir"
	exit $?
}

workdir=`mktemp -dt "$PROG".XXXXXXXX`
trap atexit EXIT HUP INT QUIT PIPE TERM

cd "$workdir"
(
	cd "$GIRAR_TASKS"
	set +f
	fgrep -l -i -x "$GB_REPO" [1-9]*/task/repo |
	sort -u |cut -d/ -f1
) >girar-tasks
(
	cd "$GB_TASKS"
	set +f
	fgrep -l -i -x "$GB_REPO" [1-9]*/task/repo |
	sort -u |cut -d/ -f1
) >gb-tasks

comm -23 girar-tasks gb-tasks |sort -n >girar-only-tasks
comm -13 girar-tasks gb-tasks |sort -n >gb-only-tasks
comm -12 girar-tasks gb-tasks |sort -n >common-tasks

gb_meta_cancel_task()
{
	local id="$1"; shift
	GIT_DIR="$GB_META" git branch -D "$id"
}

for id in `cat gb-only-tasks`; do
	builtin lockf -nv "$GB_TASKS/$id" || continue
	echo >&2 "rm task $id"
	rm -rf -- "$GB_TASKS/$id/"
	gb_meta_cancel_task "$id"
done

sync_task_in()
{
	# seq1 > seq2
	local id="$1" seq1="$2" seq2="$3"
	[ "$(($seq1%3))" = 0 ] || return 0
	# TODO: validate seq2
	local seq=$(($seq1+1))
	echo "$seq" >"$GIRAR_TASKS/$id"/task/seq
	echo >&2 "sync_in task $id"
	rsync -a "$GIRAR_TASKS/$id"/ "$GB_TASKS/$id"/
	echo "$id"
}

sync_task_out()
{
	# seq1 < seq2
	local id="$1" seq1="$2" seq2="$3"
	[ "$(($seq2%3))" = 2 ] || return 0
	echo >&2 "sync_out task $id"
	rsync -a "$GB_TASKS/$id"/ "$GIRAR_TASKS/$id"/
}

for id in `cat common-tasks`; do
	builtin lockf -nv "$GB_TASKS/$id" || continue
	builtin lockf -v "$GIRAR_TASKS/$id" || continue
	seq1=$(cat "$GIRAR_TASKS/$id"/task/seq)
	seq2=$(cat "$GB_TASKS/$id"/task/seq)
	if [ "$seq1" -gt "$seq2" ]; then
		sync_task_in "$id" "$seq1" "$seq2"
	elif [ "$seq1" -lt "$seq2" ]; then
		sync_task_out "$id" "$seq1" "$seq2"
	fi
done

copy_task_in()
{
	local id="$1" seq="$2"
	[ "$seq" = 0 ] || return 0
	echo 1 >"$GIRAR_TASKS/$id"/task/seq
	echo >&2 "copy_in task $id"
	rsync -a "$GIRAR_TASKS/$id"/ "$GB_TASKS/$id"/
	echo "$id"
}

for id in `cat girar-only-tasks`; do
	builtin lockf -v "$GIRAR_TASKS/$id" || continue
	[ -s "$GIRAR_TASKS/$id"/task/seq ] || continue
	seq=$(cat "$GIRAR_TASKS/$id"/task/seq)
	copy_task_in "$id" "$seq"
done
