#!/bin/sh -efu

PROG="${0##*/}"

. "@CMD_DIR@/girar-sh-tmpdir"
cd "$tmpdir"

for dest in packages private public; do
	dest="@CONF_DIR@/$dest.git"
	[ ! -d "$dest" ] ||
		continue

	git init -q

	files="email-distribution"

	cat >email-distribution <<-EOF
	# Email distribution file consists of lines in following format:
	# PACKAGE REFTYPE REFNAME MAILTO
	# where:
	# - PACKAGE: repository name (PACKAGE part of packages/PACKAGE.git);
	# - REFTYPE: type of updated reference (head, release, remote or tag);
	# - REFNAME: name of updated reference (basename of refs/*/*);
	# - MAILTO: comma-separated list of recipient USERs.
	# Each of first 3 fields could be either name itself or * symbol
	# which matches any name.
	# In addition, PACKAGE could be a name prefix followed by * symbol
	# to match any name with the given prefix.

	EOF

	if [ "${dest##*/}" != "private.git" ]; then
		files="$files email-subscription"

		cat >email-subscription <<-EOF
		# Email subscription file consists of lines in following format
		# USER PACKAGE REFTYPE REFNAME
		# where:
		# - USER: repository owner (USER part of git_USER);
		# - PACKAGE: repository name (PACKAGE part of /people/USER/packages/PACKAGE.git);
		# - REFTYPE: type of updated reference (head, release, remote or tag);
		# - REFNAME: name of updated reference (basename of refs/*/*).
		# Each of these 4 fields could be either name itself or * symbol
		# which matches any name.
		# In addition, PACKAGE could be a name prefix followed by * symbol
		# to match any name with the given prefix.

		EOF
	fi

	git add $files
	git commit -q -a -m "Add templates for $files"

	git clone -q --bare "$tmpdir" "$dest" &&
		printf %s\\n "$PROG: $dest: Creation complete" ||
		printf %s\\n "$PROG: $dest: Creation failed!"

	rm -rf -- .git $files
done
