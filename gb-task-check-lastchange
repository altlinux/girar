#!/bin/sh -efu
#
# When updating a package V1->V2, last changelog entry in V1
# must be present among changelog entries in V2.  This is how
# we can retain NMU and promote QA activity.
#

. gb-sh-functions
. gb-sh-tmpdir

rc=0
text=OK

changelog()
{
	rpmquery --qf '[%{CHANGELOGTIME:day}\t%{CHANGELOGNAME}\n]' -p "$1" |
	perl -pe 's/\t.*<(\S+)(?:\@| at )([\w-]+).*>[ \t]*/\t$1\@$2\t/'
}

is_git_based()
{
	set_GIT_DIR "$GB_GEARS_DIR" "$1"
	git rev-parse --verify "heads/$GB_REPO_NAME^{commit}" >/dev/null 2>&1
}

check()
{
	N=$1; shift

	changelog "$1" >$tmpdir/c1
	changelog "$2" >$tmpdir/c2
	lastchange=$(head -1 $tmpdir/c1)
	if fgrep -qs -x -e "${lastchange:?}" $tmpdir/c2; then
		return
	fi
	# Last changelog entry generated by kernel-build-tools?
	if echo "${1##*/}" |egrep -qs -x 'kernel-modules-.+\.[0-9]+\.[0-9]+\.src\.rpm'; then
		lastchange=$(head -2 $tmpdir/c1 |tail -1)
		if fgrep -qs -x -e "${lastchange:?}" $tmpdir/c2; then
			return
		fi
	fi
	echo >&2 "${2##*/}: missing last changelog entry from ${1##*/}:"
	echo >&2 "* $lastchange"

	text=COND-OK
	is_git_based "$N" || rc=1
}

join -o 0,1.3,2.3 plan/{rm,add}-src >$tmpdir/N+F1+F2
while read -r N F1 F2; do
	F1=$GB_REPO_DIR/files/SRPMS/$F1
	F2=$(findsrc "$F2")
	check "$N" "$F1" "$F2" </dev/null
done <$tmpdir/N+F1+F2

[ "$rc" = 0 ] || text=FAILED
stamp_echo >&2 "srpm inheritance check $text"
exit $rc
