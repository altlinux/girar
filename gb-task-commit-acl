#!/bin/sh -efu

. gb-sh-functions

[ -z "${GB_DISABLE_ACL_UPDATE-}" ] ||
	exit 0

[ -z "${PATH##/usr/libexec/girar:*}" -o -z "${PATH%%*:/usr/libexec/girar}" ] ||
	PATH="$PATH:/usr/libexec/girar"

while read -r N EVR F; do
	girar-check-orphaned "$N" "$GB_REPO_NAME" ||
		continue
	i="$(srpm2i "$F")"
	u="$(cat gears/$i/userid)"
	for r in ${GB_ROBOT_USERS-}; do
		if [ "$u" = "$r" ]; then
			continue 2
		fi
	done
	GIRAR_USER=root girar-acl "$GB_REPO_NAME" "$N" add "$u" ||
		continue
	stamp_echo >&2 "ACL for orphaned project \`$N' assigned to user \`$u'"
done <plan/add-src

. gb-sh-tmpdir

sort -k1,1 <plan/add-src >"$tmpdir"/add-src
sort -k1,1 <plan/rm-src >"$tmpdir"/rm-src
join -v1 "$tmpdir"/add-src "$tmpdir"/rm-src >"$tmpdir"/add
join -v2 "$tmpdir"/add-src "$tmpdir"/rm-src >"$tmpdir"/rm

while read -r N EVR F; do
	s="$(findsrc "$F")"
	i="$(srpm2i "$F")"
	u="$(cat gears/$i/userid)"
	p="$(rpmquery -p --qf '%{packager}' -- "$s")"
	o=
	if [ -z "${p##*@packages.*>}" ]; then
		g="${p%@packages.*>}"; g="${g##*<}"
		if [ -n "$g" ] && [ -n "$(girar-acl-show "$GB_REPO_NAME" "@$g")" ]; then
			o="@$g"
		fi
	fi
	GIRAR_USER=root girar-acl "$GB_REPO_NAME" "$N" create "$u" $o ||
		continue
	for r in ${GB_ROBOT_USERS-}; do
		if [ "$u" = "$r" ]; then
			GIRAR_USER=root girar-acl "$GB_REPO_NAME" "$N" del $u ||
				continue
			stamp_echo >&2 "ACL for new project \`$N' assigned to nobody${o:+ and group \"$g\"}"
			continue 2
		fi
	done
	stamp_echo >&2 "ACL for new project \`$N' assigned to user \`$u'${o:+ and group \"$g\"}"
done <"$tmpdir"/add

while read -r N EVR F; do
	GIRAR_USER=root girar-acl "$GB_REPO_NAME" "$N" delete ||
		continue
	stamp_echo >&2 "ACL for old project \`$N' removed"
done <"$tmpdir"/rm

