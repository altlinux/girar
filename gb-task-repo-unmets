#!/bin/sh -efu

. gb-sh-functions

# Use a fixed path so that genpkglist md5cache works.
repo=$TMPDIR/gb-repo
rm -rf "$repo"
mkdir "$repo"

. gb-sh-repo-conf

enable -f /usr/lib/bash/lockf lockf
builtin lockf -v -s "$GB_REPO_DIR"

# symlinked repository clone
cp -prs -- $GB_REPO_DIR/{i586,x86_64,noarch} $repo/

. gb-sh-tmpdir

# dump old unmets
for arch in i586 x86_64; do
	cat >$tmpdir/$arch-sources.list <<EOF
rpm file:$repo $arch classic
rpm file:$repo noarch classic
EOF
	$arch unmets -s $tmpdir/$arch-sources.list >$tmpdir/$arch-unmets.old
done

# remove old binary files
while read -r N EVR A F; do
	rm -- $repo/$A/RPMS.classic/$F
done <plan/rm-bin

# add symlinks to new binary files
while read -r N EVR A F; do
	bin=$(findbin "$F")
	ln -s -- $PWD/$bin $repo/$A/RPMS.classic/$F
done <plan/add-bin

# regenerate apt indices
rm -r -- $repo/{i586,x86_64,noarch}/SRPMS.classic
rm -r -- $repo/{i586,x86_64,noarch}/base
for arch in i586 x86_64 noarch; do
	mkdir -- $repo/$arch/base
	genbasedir --topdir=$repo --no-oldhashfile --bz2only --mapi $arch classic
done

# dump new unmets
for arch in i586 x86_64; do
	$arch unmets -s $tmpdir/$arch-sources.list >$tmpdir/$arch-unmets.new
done

rc=0

cd "$tmpdir"
# compare unmets
for arch in i586 x86_64; do
	comm -13 $arch-unmets.{old,new} >$arch-unmets.plus
	comm -23 $arch-unmets.{old,new} >$arch-unmets.minus
	if [ -s $arch-unmets.minus ]; then
		echo " $arch: old unmet dependencies resolved"
		cat $arch-unmets.minus
	fi >&2
	if [ -s $arch-unmets.plus ]; then
		echo " *** $arch: new unmet dependencies detected"
		cat $arch-unmets.plus
		rc=1
	fi >&2
done

exit $rc
