#!/bin/sh -efu

. gb-sh-functions
repo1="$GB_REPO_DIR"
repo2="$GB_TMP_REPO_DIR"
topdir="$PWD"

. gb-sh-tmpdir
cd "$tmpdir"

# dump unmets
for age in old new; do
for arch in $GB_ARCH; do
	[ $age = old ] && repo=$repo1 || repo=$repo2
	cat >$age-$arch-sources.list <<EOF
rpm file:$repo $arch classic
rpm file:$repo noarch classic
EOF
	$arch unmets -s $age-$arch-sources.list >$arch-unmets.$age ||
		echo 1 >>FAIL &
done
done

wait
if [ -s FAIL ]; then
	exit 1
fi

rc=0
> unmets.bin
> unmets.acl

# compare unmets
for arch in $GB_ARCH; do
	comm -13 $arch-unmets.{old,new} >$arch-unmets.plus
	comm -23 $arch-unmets.{old,new} >$arch-unmets.minus
	if [ -s $arch-unmets.plus ]; then
		echo "	$arch: NEW unmet dependencies detected:"
		awk -F'\t' '{printf "%-24s\t%s\n", $1, $2}' <$arch-unmets.plus
		cut -f1 < $arch-unmets.plus | cut -d'#' -f1 >> unmets.bin
		rc=1
	fi >&2
	if [ -s $arch-unmets.minus ]; then
		echo "	$arch: old unmet dependencies resolved:"
		awk -F'\t' '{printf "%-24s\t%s\n", $1, $2}' <$arch-unmets.minus
	fi >&2
done

sort -u -o unmets.bin{,}
join -j 1 -o 2.5 unmets.bin "$topdir"/plan/next.bin > unmets.srpms
sort -u -o unmets.srpms{,}
sort -k3,3 "$topdir"/plan/next.src |
	join -1 1 -2 3 -o 2.1 unmets.srpms - > unmets.src
sort -u -o unmets.src{,}
cut -f1 < "$topdir"/plan/add-src > add.src
sort -u -o add.src{,}
join -v1 unmets.src add.src > unmets-new.src

while read -r src; do
	gb-girar acl-show "$GB_REPO_NAME" "$src" >> unmets.acl
	list_notifiable_pkg_acl_members "$src"
done < unmets-new.src > "$topdir"/task/unmet-addressees
sort -u -o "$topdir"/task/unmet-addressees{,}

if [ -s unmets.acl ]; then
	echo '	ACLs of affected packages:'
	cat unmets.acl
fi

[ "$rc" = 0 ] && text=OK || text=FAILED
stamp_echo >&2 "dependencies check $text"
exit $rc
