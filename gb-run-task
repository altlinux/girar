#!/bin/sh -efu

trap - HUP INT QUIT PIPE TERM

. gb-sh-functions

id="$1"; shift

cd "$GB_TASKS_DIR/$id"
enable -f /usr/lib/bash/lockf lockf
# obtain an exclusive lock on the TASKS structure
builtin lockf -v .

seq=$(cat task/seq)
[ -n "$seq" ] && [ "$(($seq%3))" -eq 1 ] ||
	{ echo >&2 "Task $id is not selected for run"; exit 1; }
gb-task-set-summary

# manual completion
manual=
if [ -f task/manual ]; then
	manual=-s
fi

(
	exec >>task/log 2>&1
	[ -s task/log ] && text=resumed || text=started
	stamp_echo "task #$id for $GB_REPO_NAME $text:"
	gb-task-show

	# Prepare changes
	gb-task-pkgtar
	# Obtain an exclusive lock on the $GB_REPO_DIR.
	# Actually, only shared lock is required for build and checks,
	# but an exclusive lock is required later for commit.
	builtin lockf -v $manual "$GB_REPO_DIR"
	gb-task-build
	gb-task-copy-packages

	# Test changes
	gb-task-check-build
	gb-task-repo-plan
	gb-task-repo-vercheck
	gb-task-repo-unmets
	gb-task-check-acl
	# Obtain an exclusive lock on the $GB_GEARS_DIR.
	# Actually, only shared lock is required for check,
	# but an exclusive lock is required later for commit.
	builtin lockf -v $manual "$GB_GEARS_DIR"
	gb-task-check-girar

	[ -z "$manual" ] ||
		exit 0

	# Apply changes
	gb-task-commit-repo
	gb-task-commit-girar
	gb-task-commit-acl
	gb-task-repo-sync
)

rc=$?
echo "$rc" >task/rc
if [ "$rc" = 0 ]; then
	[ -z "$manual" ] &&
		text=COMPLETE ||
		text=TESTED
else
	text=FAILED
fi
stamp_echo >>task/log "task #$id for $GB_REPO_NAME $text"

seq=$(cat task/seq)
seq=$(($seq+1))
echo "$seq" >task/seq

gb-task-send-email "$id"

exit $rc
