#!/bin/sh -efu

. gb-sh-conf

id="$1"; shift

cd "$GB_TASKS/$id"
enable -f /usr/lib/bash/lockf lockf
# obtain an exclusive lock on the TASKS structure
builtin lockf -v .

seq=$(cat task/seq)
[ -n "$seq" ] && [ "$(($seq%3))" -eq 1 ] ||
	{ echo >&2 "Task $id is not selected for run"; exit 1; }

(
	exec >>task/log 2>&1
	[ -s task/log ] &&
		echo "Resuming task $id on $(date)" ||
		echo "Starting task $id on $(date)"
	set -x
	gb-task-pkgtar
	# Obtain an exclusive lock on the $GB_REPO_DIR.
	# Actually, only shared lock is required for build and checks,
	# but an exclusive lock is required later for commit.
	builtin lockf -v "$GB_REPO_DIR"
	gb-task-build
	gb-task-check-build
	gb-task-repo-plan
	gb-task-repo-vercheck
	gb-task-repo-unmets
	gb-task-check-acl
	# Obtain an exclusive lock on the $GB_REAL_GEARS.
	# Actually, only shared lock is required for check,
	# but an exclusive lock is required later for commit.
	builtin lockf -v "$GB_REAL_GEARS"
	gb-task-girar-check
	gb-task-repo-commit
	gb-task-girar-commit
)

rc=$?
echo "$rc" >task/rc

seq=$(cat task/seq)
seq=$(($seq+1))
echo "$seq" >task/seq

mutt -x -s "[$(cat task/repo)] task=$id seq=$seq rc=$rc" -a task/log "git_$(cat task/owner)" </dev/null

# for girar-builder
echo >&2 rc=$rc

exit $rc
