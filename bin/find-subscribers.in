#!/bin/sh -eu

. "@CMDDIR@/giter-sh-functions"

# env: GITER_USER_PREFIX GITER_USER GIT_DIR
GITER_USER_PREFIX=${GITER_USER_PREFIX:?}
GITER_USER=${GITER_USER:?}
GIT_DIR=${GIT_DIR:?}

# Globals
git_aliases="@GITER_EMAIL_ALIASES@"
maildir="@GITER_EMAIL_DIR@"

# Arguments
project_name=
project_type=
ref_style=
ref_name=

translate_email()
{
	local a=
	while read a; do 
	    	a="$(quote_sed_regexp "$a")"
		sed -ne "s/^${GITER_USER_PREFIX}$a:[[:space:]]\\+\\([^[:space:]]\\+\\).*/\\1/p" "$git_aliases"
	done
}


find_subscribers()
{
	if [ "$project_type" != packages ]; then
		cat "$GIT_DIR/mailto" 2>/dev/null
		return
	fi

	local u="$(quote_sed_regexp "$GITER_USER")"
	local p="$project_name"
	local t="$ref_style"
	local n="$ref_name"

	u="\\(\\*\\|$u\\)"
	p="\\(\\*\\|$p\\)"
	t="\\(\\*\\|$t\\)"
	n="\\(\\*\\|$n\\)"

	for subdir; do
		grep -ls "^$u[[:space:]]\\+$p[[:space:]]\\+$t[[:space:]]\\+$n[[:space:]]*\$" "$maildir/$subdir"/*/subscription |
			sed -ne "s|^$maildir/$subdir/\\([^/]\\+\\)/subscription\$|\\1|p"

		[ ! -f "$maildir/$subdir/$u/distribution" ] ||
			sed -ne "s/^$p[[:space:]]\\+$t[[:space:]]\\+$n[[:space:]]\\+//p" "$maildir/$subdir/$u/distribution" |
			tr -s ',[:space:]' '\n'
	done
}

if [ "$#" -lt 4 ]; then
    	printf %s\\n "$PROG: Wrong number of arguments: $#" >&2
    	exit 1
fi

project_name="$(quote_sed_regexp "$1")" && shift
ref_style="$(quote_sed_regexp "$1")" && shift
ref_name="$(quote_sed_regexp "$1")" && shift

project_type="${GIT_DIR%/*}"
project_type="${project_type##*/}"

find_subscribers "$@" |
	translate_email |
	sed -e '/^[[:space:]]*$/d' -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//' |
	sort -u
