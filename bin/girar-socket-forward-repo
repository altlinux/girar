#!/bin/sh -efu

read line
set -- $line
unset line

. shell-error
. girar-sh-config

usage()
{
	[ -z "$*" ] || message "$*"
	echo >&2 "usage: $PROG <reponame> <taskno>"
	exit 1
}

[ $# -ge 2 ] || usage 'Not enough arguments.'
[ $# -le 2 ] || usage 'Too many arguments.'
logger --id=$$ -t "$PROG" "$*"

repo="$1"; shift
task="$1"; shift

[ "$task" -gt 0 ] 2>/dev/null || fatal "task $task: Invalid argument"

src="$repo/release/$task"
dst="$repo/task/$task"
k="_$(($task/1024))"
adst="$repo/task/archive/$k/$task"
done_dir="$STATE_DIR/repo/.done"

cd "$STATE_DIR/repo"

for d in "$dst" "$adst"; do
	[ ! -e "$d" ] ||
		fatal "$d already exists"
done
[ -d "$src" ] ||
	fatal "$src not found"

for d in $(set +f && echo ??*); do
	[ "$repo" = "$d" ] || continue
	[ -d "$d" ] || continue
	girar-repo-savetree "$src" "$dst"
	readlink -ev -- "$dst"

	# Hook up archiving jobs.
	exec >/dev/null 2>&1
	exec < "$dst"
	flock -n -s 0
	# We are called while $repo/release is locked,
	# so $repo/release/latest cannot change.
	latest="$repo/release/latest"
	exec 3< "$latest"
	flock -n -s 3
	latest_dest="$(readlink -- "$latest")"

	cd "$repo/task/"
	# Move .archived/ repositories to $done_dir/.
	if [ -d "$done_dir" ] &&
	   [ -d .archived ] &&
	   [ -d "$TASKS_DIR/.archived" ]; then
		for t in $(set +f && cd .archived && echo [1-9]*); do
			[ -d ".archived/$t" ] &&
			[ -d "$TASKS_DIR/.archived/$t" ] ||
				continue
			mv ".archived/$t" "$done_dir/"
			logger --id=$$ -t "$PROG" "done: $repo/task/$t"
			rm -rf -- "$done_dir/$t"
		done
	fi

	# Move archived repositories to .archived/.
	for t in $(set +f && echo [1-9]*); do
		[ -d "$t" ] || continue
		k="_$(($t/1024))" || continue
		ti="$t/files/list/task.info"
		[ -w "$ti" ] || continue
		ati="archive/$k/$t/files/list/task.info"
		# Has it been archived already?
		cmp -s -- "$ti" "$ati" || continue
		{
			flock -n 0 || continue
			# Has the latest changed somehow?
			[ "$latest_dest" = "$(readlink -- "$STATE_DIR/repo/$latest")" ] ||
				exit 0
			mkdir -p -m755 .archived
			chmod u+w "$t"
			mv "$t" .archived/
		} < "$t"
		logger --id=$$ -t "$PROG" "archived: $repo/task/$t"
	done

	exit
done

fatal "repo $repo: Invalid argument"
