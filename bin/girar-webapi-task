#!/bin/sh -efu

. girar-sh-functions
. girar-sh-json-functions
PROG='girar-webapi-task'

action="$1"; shift
id="$1"; shift

delete() {
	print_json string "state" "delete"
}

share() {
	print_json bool "shared" \
		"$(find gears -maxdepth 0 -path gears -type d -perm -g=w -printf true -or -printf false 2>/dev/null || echo false)"
}

state() {
	print_json_file string task/state state new
}

update() {
	share
	state

	print_json number taskid "$id"
	print_json bool "testonly" "$(test -f task/test-only && echo true || echo false)"
	print_json bool "swift" "$(test -f task/swift && echo true || echo false)"

	print_json_file number task/try try 0
	print_json_file number task/iter iter 0
	print_json_file string task/repo repo
	print_json_file string task/state state
	print_json_file string task/owner owner

	aowner=
	if [ -f task/abort ]; then
		aowner="$(stat -c %U task/abort)"
		aowner="${aowner#"$USER_PREFIX"}"
	fi
	print_json string "aborted" "$aowner"
}

cd "$TASKS_DIR/$id"

handler="$action"
case "$action" in
	create)
		url="/tasks"
		handler="update"
		;;
	delete|update|share)
		url="/tasks/$id"
		;;
	state)
		[ -s task/state ] ||
			exit 0
		url="/tasks/$id"
		;;
	*)
		fatal "unknown action: '$action'"
		;;
esac

{
	printf '{'
	$handler
	printf '}'
} |
	post_api "$url"
