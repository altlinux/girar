#!/bin/sh -efu

. girar-sh-functions

usage()
{
	echo >&2 "$PROG: $*"
	echo >&2 "usage: $PROG <path to git repository> [<path to directory>]"
	exit 1
}

[ "$#" -ge 1 ] ||
	usage 'Not enough arguments.'
[ "$#" -le 2 ] ||
	usage 'Too many arguments.'

[ -n "${PEOPLE_DIR:-}" ] ||
	fatal 'PEOPLE_DIR undefined'

[ -n "${SRPMS_DIR:-}" ] ||
	fatal 'SRPMS_DIR undefined'

[ -n "${GEARS_DIR:-}" ] ||
	fatal 'GEARS_DIR undefined'

cd

repo0="$1"; shift
repo=
p_repo="$(prefix_packages "$repo0")"
p_repo="${p_repo%.git}.git"
if [ -e "$p_repo" ]; then
	repo="$(readlink -ev "$p_repo")/"
	people="$(readlink -ev "$PEOPLE_DIR")"
	srpms="$(readlink -ev "$SRPMS_DIR")"
	gears="$(readlink -ev "$GEARS_DIR")"
	[ -z "${repo##$people/*}" -o \
	  -z "${repo##$srpms/*}" -o \
	  -z "${repo##$gears/*}" ] ||
		fatal "$repo0: directory does not belong to allowed directory tree"
fi
if [ -z "$repo" ]; then
	case "$repo0" in
		ftp://*|git://*|http://*|https://*|rsync://*) p_repo="$repo0" ;;
		*) fatal "$repo0: invalid repository" ;;
	esac
fi

if [ "$#" -ge 1 ]; then
	dir0="$1"; shift
else
	dir0="${repo0##*/}"
fi

dir="$(validate_project_dir "$dir0")"
[ ! -e "$dir" ] ||
	fatal "$dir0: destination already exists"

git clone --bare --template="$GIT_TEMPLATE_DIR" "$p_repo" "$dir" >/dev/null
cd "$dir"
echo "${dir%.git}" >description
install -m600 /dev/null git-daemon-export-ok
GIT_DIR="$PWD" "$HOOKS_DIR/post-update"
printf '%s:\t%s\n' "$PROG" "$PWD"
