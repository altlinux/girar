#!/bin/sh -efu

. girar-sh-functions
. shell-args

PROG='task share'

show_help()
{
	cat <<EOF
$PROG - manage task shared access

Usage: $PROG [<task_id>] <action>

Actions:
  status        show current shared access state;
  enable        enable shared access;
  disable       disable shared access.
EOF
	exit
}

if [ "${1-}" = '--help' ]; then
	show_help
fi

if [ "$#" -gt 2 ]; then
	show_usage 'too many arguments.'
fi

if [ "$#" -lt 1 ]; then
	show_usage 'not enough arguments.'
fi

if [ "$#" -eq 1 ]; then
	action="$1"
else
	action="$2"
fi

case "$action" in
	status|enable|enabled|disable|disabled) ;;
	*) show_usage "invalid action: $action" ;;
esac

if [ "$#" -eq 1 ]; then
	id=$(PROG="$PROG" girar-task-find-current)
else
	id=$(PROG="$PROG" girar-task-find-current "$1")
	shift
fi

cd "$TASKS_DIR/$id"
enable -f /usr/lib/bash/lockf lockf

op=
case "$action" in
	status)
		find gears -maxdepth 0 -path gears -type d -perm -g=w -printf 'enabled\n' -or -printf 'disabled\n' 2>/dev/null ||
			echo disabled
		exit 0
		;;
	enable|enabled)
		op=+
		;;
	disable|disabled)
		op=-
		;;
	*)
		show_usage "invalid action: $action"
		;;
esac

[ -n "$op" ] || exit 0

# obtain an exclusive lock on the TASKS structure
builtin lockf -n . ||
	fatal "task #$id is locked"

[ -n "$(find acl -mindepth 1 -maxdepth 1 -path 'acl/[1-7]*' -type d 2>/dev/null)" ] ||
        fatal "cannot change status for empty task #$id"

[ -O gears -a -O acl ] ||
	fatal 'Permission denied'

chmod g${op}w gears acl
girar-task-make-index-html "$id"
girar-webapi-task share "$id"
