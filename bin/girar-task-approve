#!/bin/sh -efu

. girar-sh-functions
. shell-args

PROG='task approve'

show_help()
{
	cat <<EOF
$PROG - approve a subtask of a task

Usage: $PROG [--revoke] <task id> <subtask number>
EOF
	exit
}

TEMP="$(getopt -n "$PROG" -o h -l revoke,help -- "$@")" ||
        show_usage
eval set -- "$TEMP"

revoke=
while :; do
	case "${1-}" in
		--) shift; break ;;
		--revoke) revoke=1 ;;
		-h|--help) show_help ;;
		*) break;
	esac
	shift
done

if [ "$#" -gt 2 ]; then
	show_usage 'too many arguments.'
fi

if [ "$#" -lt 2 ]; then
	show_usage 'not enough arguments.'
fi

id=$(PROG="$PROG" girar-task-find-current "$1"); shift
num="$1"; shift

cd "$TASKS_DIR/$id"

stamp="$(LC_TIME=C date -u '+%Y-%b-%d %T')"
for i in $(gear_nums); do
	[ -d "acl/$i" ] && [ 'all' = "$num" -o "$i" = "$num" ] ||
		continue
	f="acl/$i/$GIRAR_USER"
	if [ -z "$revoke" ]; then
		if [ -s "$f" ]; then
			message "$i: already approved"
		else
			printf '%s :: approved by %s\n' "$stamp" "$GIRAR_USER" >> "$f"
		fi
	else
		if [ -s "$f" ]; then
			rm "$f"
		else
			message "$i: nothing to revoke"
		fi
	fi
	[ 'all' = "$num" ] ||
		exit 0
done
[ 'all' = "$num" ] ||
	fatal "task #$id: subtask #$num not found"
