#!/bin/sh -efu

PROG=people-clone

fatal()
{
	echo "$PROG: $*" >&2
	exit 1
}

usage()
{
	echo "$PROG: $*" >&2
	echo "usage: $PROG <repository> [<directory>]" >&2
	exit 1
}

[ "$#" -ge 1 ] ||
	usage 'Not enough arguments.'
[ "$#" -le 2 ] ||
	usage 'Too many arguments.'

[ -n "${GITER_HOME:-}" ] ||
	fatal 'GITER_HOME undefined'

cd "$HOME/packages"

repo0="$1" && shift
repo=
if [ -e "$repo0" ]; then
	repo="$(readlink -ev "$repo0")/"
	people="$(readlink -ev "$GITER_HOME")"
	[ -z "${repo##$people/*}" ] ||
		fatal "$repo0: invalid local repository"
fi
if [ -z "$repo" ]; then
	case "$repo0" in
		rsync://*|https://*|http://*|ftp://*) ;;
		*) fatal "$repo0: invalid repository" ;;
	esac
fi

if [ "$#" -ge 1 ]; then
	dir0="$1" && shift
else
	dir0="${repo0##*/}"
fi

dir="$(printf %s "$dir0" |sed -e 's,^packages/,,' -e 's,/\+$,,' -e 's,\.git$,,')"
printf %s "$dir" |egrep -qs '^[A-Za-z0-9][-A-Za-z0-9_.]+$' ||
	fatal "$dir0: invalid directory name"
[ ! -e "$dir".git ] ||
	fatal "$dir0: destination already exists"

git-clone --bare --template="@GITER_TEMPLATES_DIR@" "$repo0" "$dir.git"
cd "$dir.git"
echo "packages/$dir" >description
install -m600 /dev/null git-daemon-export-ok
GIT_DIR=`/bin/pwd`
export GIT_DIR
exec "@GITER_HOOKS_DIR@/post-update"
